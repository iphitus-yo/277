// Generated by view binder compiler. Do not edit!
package com.example.paranalog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.paranalog.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChecklistListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCreateChecklist;

  @NonNull
  public final RecyclerView checklistRecyclerView;

  @NonNull
  public final TextView emptyListMessage;

  @NonNull
  public final FloatingActionButton fabAddChecklist;

  @NonNull
  public final SearchView searchView;

  private FragmentChecklistListBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonCreateChecklist, @NonNull RecyclerView checklistRecyclerView,
      @NonNull TextView emptyListMessage, @NonNull FloatingActionButton fabAddChecklist,
      @NonNull SearchView searchView) {
    this.rootView = rootView;
    this.buttonCreateChecklist = buttonCreateChecklist;
    this.checklistRecyclerView = checklistRecyclerView;
    this.emptyListMessage = emptyListMessage;
    this.fabAddChecklist = fabAddChecklist;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChecklistListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChecklistListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_checklist_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChecklistListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_create_checklist;
      Button buttonCreateChecklist = ViewBindings.findChildViewById(rootView, id);
      if (buttonCreateChecklist == null) {
        break missingId;
      }

      id = R.id.checklist_recycler_view;
      RecyclerView checklistRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (checklistRecyclerView == null) {
        break missingId;
      }

      id = R.id.empty_list_message;
      TextView emptyListMessage = ViewBindings.findChildViewById(rootView, id);
      if (emptyListMessage == null) {
        break missingId;
      }

      id = R.id.fab_add_checklist;
      FloatingActionButton fabAddChecklist = ViewBindings.findChildViewById(rootView, id);
      if (fabAddChecklist == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new FragmentChecklistListBinding((ConstraintLayout) rootView, buttonCreateChecklist,
          checklistRecyclerView, emptyListMessage, fabAddChecklist, searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
